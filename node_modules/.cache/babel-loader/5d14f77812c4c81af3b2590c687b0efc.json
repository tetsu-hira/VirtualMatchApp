{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AIQ11\\\\Desktop\\\\5sTSX\\\\fives\\\\src\\\\components\\\\Excel.tsx\";\nimport * as React from 'react';\nimport ExcelJS from \"exceljs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Excel = () => {\n  const handleClickDownloadButton = async (e, format) => {\n    e.preventDefault();\n    const workbook = new ExcelJS.Workbook();\n    workbook.addWorksheet(\"sheet1\");\n    const worksheet = workbook.getWorksheet(\"sheet1\");\n    worksheet.columns = [{\n      header: \"No.\",\n      key: \"id\"\n    }, {\n      header: \"工程\",\n      key: \"name\"\n    }, {\n      header: \"時間\",\n      key: \"time\"\n    }];\n    worksheet.addRows([{\n      id: 0,\n      name: \"開始\",\n      time: 0.10\n    }, {\n      id: 1,\n      name: \"MV2\",\n      time: 0.25\n    }, {\n      id: 2,\n      name: \"岡熱\",\n      time: 0.10\n    }]);\n    const uint8Array = format === \"xlsx\" ? await workbook.xlsx.writeBuffer() //xlsxの場合\n    : await workbook.csv.writeBuffer(); //csvの場合\n\n    const blob = new Blob([uint8Array], {\n      type: \"application/octet-binary \"\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"newData.\" + format; //フォーマットによって拡張子を変える\n\n    a.click();\n    a.remove();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30C7\\u30FC\\u30BF\\u51FA\\u529B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleClickDownloadButton(e, \"xlsx\"),\n        children: \"Excel\\u5F62\\u5F0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleClickDownloadButton(e, \"csv\"),\n        children: \"CSV\\u5F62\\u5F0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_c = Excel;\nexport default Excel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Excel\");","map":{"version":3,"sources":["C:/Users/AIQ11/Desktop/5sTSX/fives/src/components/Excel.tsx"],"names":["React","ExcelJS","Excel","handleClickDownloadButton","e","format","preventDefault","workbook","Workbook","addWorksheet","worksheet","getWorksheet","columns","header","key","addRows","id","name","time","uint8Array","xlsx","writeBuffer","csv","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","remove"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;;;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAC5B,QAAMC,yBAAyB,GAAG,OAChCC,CADgC,EAEhCC,MAFgC,KAG7B;AACHD,IAAAA,CAAC,CAACE,cAAF;AAEA,UAAMC,QAAQ,GAAG,IAAIN,OAAO,CAACO,QAAZ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,YAAT,CAAsB,QAAtB;AACA,UAAMC,SAAS,GAAGH,QAAQ,CAACI,YAAT,CAAsB,QAAtB,CAAlB;AAEAD,IAAAA,SAAS,CAACE,OAAV,GAAoB,CAClB;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,GAAG,EAAE;AAAtB,KADkB,EAElB;AAAED,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,GAAG,EAAE;AAArB,KAFkB,EAGlB;AAAED,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,GAAG,EAAE;AAArB,KAHkB,CAApB;AAMAJ,IAAAA,SAAS,CAACK,OAAV,CAAkB,CAChB;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADgB,EAKd;AACAF,MAAAA,EAAE,EAAE,CADJ;AAEAC,MAAAA,IAAI,EAAE,KAFN;AAGAC,MAAAA,IAAI,EAAE;AAHN,KALc,EASd;AACAF,MAAAA,EAAE,EAAE,CADJ;AAEAC,MAAAA,IAAI,EAAE,IAFN;AAGAC,MAAAA,IAAI,EAAE;AAHN,KATc,CAAlB;AAgBA,UAAMC,UAAU,GACdd,MAAM,KAAK,MAAX,GACI,MAAME,QAAQ,CAACa,IAAT,CAAcC,WAAd,EADV,CACsC;AADtC,MAEI,MAAMd,QAAQ,CAACe,GAAT,CAAaD,WAAb,EAHZ,CA7BG,CAgCqC;;AACxC,UAAME,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACL,UAAD,CAAT,EAAuB;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAAvB,CAAb;AACA,UAAMC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BN,IAA3B,CAAZ;AACA,UAAMO,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAF,IAAAA,CAAC,CAACG,IAAF,GAASP,GAAT;AACAI,IAAAA,CAAC,CAACI,QAAF,GAAa,aAAa7B,MAA1B,CArCG,CAqC+B;;AAClCyB,IAAAA,CAAC,CAACK,KAAF;AACAL,IAAAA,CAAC,CAACM,MAAF;AACD,GA3CD;;AA6CA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAGhC,CAAD,IAAOD,yBAAyB,CAACC,CAAD,EAAI,MAAJ,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAGA,CAAD,IAAOD,yBAAyB,CAACC,CAAD,EAAI,KAAJ,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBAJF;AAAA,kBADF;AAeD,CA7DD;;KAAMF,K;AA+DN,eAAeA,KAAf","sourcesContent":["import * as React from 'react';\r\nimport ExcelJS from \"exceljs\";\r\n\r\nconst Excel: React.FC = () => {\r\n  const handleClickDownloadButton = async (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    format:  \"xlsx\" | \"csv\"\r\n  ) => {\r\n    e.preventDefault();\r\n\r\n    const workbook = new ExcelJS.Workbook();\r\n    workbook.addWorksheet(\"sheet1\");\r\n    const worksheet = workbook.getWorksheet(\"sheet1\");\r\n\r\n    worksheet.columns = [\r\n      { header: \"No.\", key: \"id\"},\r\n      { header: \"工程\", key: \"name\"},\r\n      { header: \"時間\", key: \"time\"}\r\n    ];\r\n\r\n    worksheet.addRows([\r\n      {\r\n        id: 0,\r\n        name: \"開始\",\r\n        time: 0.10\r\n      },{\r\n        id: 1,\r\n        name: \"MV2\",\r\n        time: 0.25\r\n      },{\r\n        id: 2,\r\n        name: \"岡熱\",\r\n        time: 0.10\r\n      }\r\n    ]);\r\n    \r\n    const uint8Array =\r\n      format === \"xlsx\"\r\n        ? await workbook.xlsx.writeBuffer() //xlsxの場合\r\n        : await workbook.csv.writeBuffer(); //csvの場合\r\n    const blob = new Blob([uint8Array], { type: \"application/octet-binary \"});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"newData.\" + format; //フォーマットによって拡張子を変える\r\n    a.click();\r\n    a.remove();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>データ出力</h1>\r\n      </header>\r\n      <>\r\n        <button onClick={(e) => handleClickDownloadButton(e, \"xlsx\")}>\r\n          Excel形式\r\n        </button>\r\n        <button onClick={(e) => handleClickDownloadButton(e, \"csv\")}>\r\n          CSV形式\r\n        </button>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Excel;\r\n"]},"metadata":{},"sourceType":"module"}